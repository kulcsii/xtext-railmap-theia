/**
 * generated by Xtext 2.12.0
 */
package hu.bme.mit.temalab.railmap.validation;

import com.google.common.base.Objects;
import com.google.common.collect.Iterators;
import hu.bme.mit.temalab.railmap.railLinesMap.Connection;
import hu.bme.mit.temalab.railmap.railLinesMap.RailLinesMapPackage;
import hu.bme.mit.temalab.railmap.railLinesMap.TurnoutEndLocation;
import hu.bme.mit.temalab.railmap.validation.AbstractRailLinesMapValidator;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class RailLinesMapValidator extends AbstractRailLinesMapValidator {
  public static final String INVALID_LENGTH = "InvalidLength";
  
  @Check
  public void checkConnectionLength(final Connection connection) {
    int _length = connection.getLength();
    boolean _lessEqualsThan = (_length <= 0);
    if (_lessEqualsThan) {
      this.error("Connections must consist of a positive number of segments", 
        RailLinesMapPackage.Literals.CONNECTION__LENGTH, 
        RailLinesMapValidator.INVALID_LENGTH);
    }
  }
  
  public static final String UNIQUE_TURNOUT_CONNECTOR = "UniqueConnectorToTurnoutEnd";
  
  @Check
  public void checkUniqueConnectorToTurnoutEnd(final TurnoutEndLocation location) {
    final Function1<TurnoutEndLocation, Boolean> _function = (TurnoutEndLocation otherLoc) -> {
      return Boolean.valueOf((((!Objects.equal(location, otherLoc)) && Objects.equal(location.getTurnout(), otherLoc.getTurnout())) && Objects.equal(location.getEnd(), otherLoc.getEnd())));
    };
    boolean _exists = IteratorExtensions.<TurnoutEndLocation>exists(Iterators.<TurnoutEndLocation>filter(location.eResource().getAllContents(), TurnoutEndLocation.class), _function);
    if (_exists) {
      this.error("A single turnout end can only connect to one track", 
        RailLinesMapPackage.Literals.TURNOUT_END_LOCATION__END, 
        RailLinesMapValidator.UNIQUE_TURNOUT_CONNECTOR);
    }
  }
}
