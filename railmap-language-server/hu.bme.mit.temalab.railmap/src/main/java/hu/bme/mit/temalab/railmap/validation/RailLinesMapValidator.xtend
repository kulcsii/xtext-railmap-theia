/*
 * generated by Xtext 2.12.0
 */
package hu.bme.mit.temalab.railmap.validation

import hu.bme.mit.temalab.railmap.railLinesMap.Connection
import hu.bme.mit.temalab.railmap.railLinesMap.RailLinesMapPackage
import hu.bme.mit.temalab.railmap.railLinesMap.TurnoutEndLocation
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class RailLinesMapValidator extends AbstractRailLinesMapValidator {
	
	
	public static val INVALID_LENGTH = 'InvalidLength'
	
	@Check
	def checkConnectionLength(Connection connection) {
		if (connection.length <= 0) {
			error('Connections must consist of a positive number of segments',
				RailLinesMapPackage.Literals.CONNECTION__LENGTH,
				INVALID_LENGTH
			)
		}
	}

	public static val UNIQUE_TURNOUT_CONNECTOR = 'UniqueConnectorToTurnoutEnd'

	@Check
	def checkUniqueConnectorToTurnoutEnd(TurnoutEndLocation location) {
		if (location.eResource.allContents.filter(TurnoutEndLocation).exists[otherLoc | 
			location != otherLoc 
			&& location.turnout == otherLoc.turnout
			&& location.end == otherLoc.end
		]) {
			error('A single turnout end can only connect to one track',
				RailLinesMapPackage.Literals.TURNOUT_END_LOCATION__END,
				UNIQUE_TURNOUT_CONNECTOR
			)
		}
	}
	
}
